#!/usr/bin/tclsh

proc clean_string {line} {
  # Trim up the line remove extra space/tabs:
  regsub -all {[ \r\t\n]+} $line " " line
  # Remove any leading white space:
  regsub -all {^[ ]} $line "" line
  # Remove any ending white space:
  regsub -all {[ ]$} $line "" line
  
  return $line
}

proc get_LISP_processes {output} {
  set lisp_processes ""

  foreach line [split $output "\n"] {
    set line [clean_string $line]

    if {[regexp {^router } $line]} {
      lappend lisp_processes [lindex [split $line " "] end]
    }
  }
  set lisp_processes [lsort -unique $lisp_processes]
  return $lisp_processes
}


set output "MSMR#show run | inc router lisp
router lisp 1
router lisp 2
router lisp test1
router lisp test2
router lisp test2
router lisp test2
router lisp test2
router lisp test2
router lisp test3
router lisp test4
router lisp test2
router lisp test2
MSMR#"

set lisp_processes ""

set lisp_processes [get_LISP_processes $output]

#set lisp_processes ""

if { [ llength $lisp_processes ] >= 1} {
  set len [llength $lisp_processes]
  puts "len: $len"

  if {$len >= 1} {
    puts "Length is greater than or equal to 1"
  }

  puts "lisp processes found\n"
  foreach process [split $lisp_processes " "] {
    puts "Working on LISP process: $process"
  }
} else {
  puts "\nNo lisp processes found\n"
}

puts "\nThe End\n"

#if { [info exists lisp_processes] } {
#}

#foreach line [split $log "\n"] {
#  set line [clean_string $line]
#
#  if {[regexp {^router } $line]} {
#    lappend lisp_processes [lindex [split $line " "] end]
#  }
#}
#
#set lisp_processes [lsort -unique $lisp_processes]
#
#foreach process [split $lisp_processes " "] {
#  puts "process: $process"
#}
#
#


